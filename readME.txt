Eureka的治理机制
服务提供者
服务注册： 启动的时候会通过REST请求的方式将自己注册到Eureka Server上，同时带上了自身服务的一些元数据信息。
服务续约：在注册完服务之后，服务提供者会维护一个心跳，用来告诉Eureka Server存在着。
服务下线：当服务实列进行正常的关闭操作时，它会触发一个服务下线的REST给Eureka Server，告诉服务注册中心，我要下线了。
服务消费者：
获取服务：当我们启动服务消费者的时候，它会发送一个REST请求给服务注册中心，来获取上面注册的服务清单
服务调用：服务消费者在获取服务清单后，通过服务名可以获得具体提供服务的实列名和该实列的元数据信息，在进行服务调用的时候
优先访问同一个Zone中的服务提供方。
Eureka Server(服务注册中心)
失效剔除：默认每隔一段时间（默认60秒）将当前清单中超时没有续约的剔除出去。

Hystrix:

Hystrix是一个用于处理分布式系统的延迟和容错的开源库，在分布式的系统里许多依赖不可避免的会调用失败，比如超时，异常等

Hystrix能够保证一个依赖出现问题的情况下，不会导致整个服务失败，避免级联故障，以提高分布式系统的弹性。

断路器本身就是一种开关，当某个服务单元发生故障之后，通过断路器的故障监控（类似熔断保险丝），向调用方返回一个符合预期的，可处理
的备选相应（FallBack）,而不是长时间的等待或者抛出调用方法处理的异常，这样就保证了服务调用方的线程不会被长时间，不必要的占用
从而避免了故障在分布式系统中的蔓延，乃至雪崩。

服务降级：整体的资源不够了，忍痛将某些服务先关掉，待度过难关，再开启回来。
